name: test-github-actions-releases

on:
  push:
  workflow_dispatch:

jobs:
  test-github-actions-releases:
    runs-on: ubuntu-latest
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: Checkout github-actions-repo
        uses: actions/checkout@v4
        with:
          repository: actions/runner-images
          path: runner-images

      - name: Git tags
        run: |
          cd runner-images
          git fetch --tags
          git fetch --prune --unshallow || true
          
      - name: Get latest release ubuntu
        id: get_release
        run: |
          RELEASES=$(curl -s https://api.github.com/repos/actions/runner-images/releases)
          RELEASE=$(echo "$RELEASES" | jq -r '.[] | select(.prerelease == false) | .tag_name' | sort -r | grep ubuntu22 |head -n1)
          echo "RELEASE_TAG=$RELEASE" >> $GITHUB_OUTPUT

      - name: Get latest release ubuntu
        id: get_release1
        run: |
          RELEASES=$(curl -s https://api.github.com/repos/actions/runner-images/releases)
          RELEASE=$(echo "$RELEASES" | jq -r '.[] | select(.prerelease == false) | .tag_name' | sort -r | grep macOS-12 |head -n1)
          echo "RELEASE_TAG=$RELEASE" >> $GITHUB_OUTPUT
      
      - name: Get latest release ubuntu
        id: get_release2
        run: |
          RELEASES=$(curl -s https://api.github.com/repos/actions/runner-images/releases)
          RELEASE=$(echo "$RELEASES" | jq -r '.[] | select(.prerelease == false) | .tag_name' | sort -r | grep macos-13$ |head -n1)
          echo "RELEASE_TAG=$RELEASE" >> $GITHUB_OUTPUT

      - name: Get latest release ubuntu
        id: get_release3
        run: |
          RELEASES=$(curl -s https://api.github.com/repos/actions/runner-images/releases)
          RELEASE=$(echo "$RELEASES" | jq -r '.[] | select(.prerelease == false) | .tag_name' | sort -r | grep macos-14$ |head -n1)
          echo "RELEASE_TAG=$RELEASE" >> $GITHUB_OUTPUT

      - name: Get latest release ubuntu
        id: get_release4
        run: |
          RELEASES=$(curl -s https://api.github.com/repos/actions/runner-images/releases)
          RELEASE=$(echo "$RELEASES" | jq -r '.[] | select(.prerelease == false) | .tag_name' | sort -r | grep win22 |head -n1)
          echo "RELEASE_TAG=$RELEASE" >> $GITHUB_OUTPUT
