name: test-github-actions-releases

on:
  push:
  workflow_dispatch:

jobs:
  test-github-actions-releases:
    runs-on: ubuntu-latest
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
          
      - name: Get latest release ubuntu
        id: get_release_ubuntu
        run: |
          RELEASES=$(curl -s https://api.github.com/repos/actions/runner-images/releases)
          RELEASE_UBUNTU=$(echo "$RELEASES" | jq -r '.[] | select(.prerelease == false) | .tag_name' | sort -r | grep ubuntu22 |head -n1)
          echo "$RELEASE_UBUNTU"
          echo "$RELEASE_UBUNTU" > ubuntu.txt

      - name: Get latest release macOS-12
        id: get_release_macos12
        run: |
          RELEASES=$(curl -s https://api.github.com/repos/actions/runner-images/releases)
          RELEASE_MACOS12=$(echo "$RELEASES" | jq -r '.[] | select(.prerelease == false) | .tag_name' | sort -r | grep macos-12 |head -n1)
          echo "$RELEASE_MACOS12"
          echo "$RELEASE_MACOS12" > macos-12.txt
      
      - name: Get latest release macos-13
        id: get_release_macos13
        run: |
          RELEASES=$(curl -s https://api.github.com/repos/actions/runner-images/releases)
          RELEASE_MACOS13=$(echo "$RELEASES" | jq -r '.[] | select(.prerelease == false) | .tag_name' | sort -r | grep macos-13 |head -n1)
          echo "$RELEASE_MACOS13"
          echo "$RELEASE_MACOS13" > macos-13.txt

      - name: Get latest release macos-14
        id: get_release_macos14
        run: |
          RELEASES=$(curl -s https://api.github.com/repos/actions/runner-images/releases)
          RELEASE_MACOS14=$(echo "$RELEASES" | jq -r '.[] | select(.prerelease == false) | .tag_name' | sort -r | grep macos-14-arm64 |head -n1)
          echo "$RELEASE_MACOS14"
          echo "$RELEASE_MACOS14" > macos-14.txt

      - name: Get latest release windows 2022
        id: get_release_windows
        run: |
          RELEASES=$(curl -s https://api.github.com/repos/actions/runner-images/releases)
          RELEASE_WINDOWS=$(echo "$RELEASES" | jq -r '.[] | select(.prerelease == false) | .tag_name' | sort -r | grep win22 |head -n1)
          echo "$RELEASE_WINDOWS"
          echo "$RELEASE_WINDOWS" > windows.txt

      - name: Read in txt files
        id: runner_diff
        run: |
          ubuntu <- readLines("ubuntu.txt")
          macos12 <- readLines("macos-12.txt")
          macos13 <- readLines("macos-13.txt")
          macos14 <- readLines("macos-14.txt")
          windows <- readLines("windows.txt")

          all_os <- capture.output(cat(ubuntu, macos12, macos13, macos14, windows, sep = "\n"))
          file.create("all_os_versions_new.txt")
          writeLines(all_os, "all_os_versions_new.txt")

          all_os_previous <- readLines(".github/ref_file/all_os_versions.txt")
          all_os_new <- readLines("all_os_versions_new.txt")
          if(any(all_os_new != all_os_previous)){
            cat(sprintf('output=%s', 'differences in runners'), file = Sys.getenv("GITHUB_OUTPUT"), append = TRUE)
            cat(sprintf('differences=%s', all_os_new[all_os_new != all_os_previous]), file = Sys.getenv("GITHUB_OUTPUT"), append = TRUE)
            }
          print(all_os_new[all_os_new != all_os_previous])
        shell: Rscript {0}

      - name: Notify pkgdown deployment
        if: steps.runner_diff.outputs.diff_output == 'differences in runners'
        run: |
          rm ubuntu.txt macos-12.txt macos-13.txt macos-14.txt windows.txt
          mv all_os_versions_new.txt .github/ref_file/all_os_versions.txt

      - uses: EndBug/add-and-commit@v9
        if: steps.runner_diff.outputs.output == 'differences in runners'
        with:
          message: 'update GitHub actions runner versions'
          add: .github/ref_file/all_os_versions.txt
          default_author: github_actions
          push: true
          
      - name: Fail action if differences in runners
        if: steps.runner_diff.outputs.output == 'differences in runners'
        run: |
          echo 'GitHub actions runners have changed ${{ steps.runner_diff.outputs.differences }}'
          echo 'Run build-ss3.yml and build-admb-and-ss3.yml to make sure they still work with updated runners'
          exit 1
      
      # - name: Artifact
      #   uses: actions/upload-artifact@main
      #   with:
      #     name: 'all_os_versions.txt'
      #     path: all_os_versions.txt
